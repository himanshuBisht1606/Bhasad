//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccessLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BhasadEntities : DbContext
    {
        public BhasadEntities()
            : base("name=BhasadEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductType> ProductTypes { get; set; }
        public virtual DbSet<ProductVariant> ProductVariants { get; set; }
        public virtual DbSet<ProductVariantStatu> ProductVariantStatus { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<Product> GetProductProductTypeData(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("GetProductProductTypeData", productIdParameter);
        }
    
        public virtual ObjectResult<Product> GetProductProductTypeData(Nullable<int> productId, MergeOption mergeOption)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("GetProductProductTypeData", mergeOption, productIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_InsertProduct(Nullable<int> productTypeId, string productName)
        {
            var productTypeIdParameter = productTypeId.HasValue ?
                new ObjectParameter("ProductTypeId", productTypeId) :
                new ObjectParameter("ProductTypeId", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_InsertProduct", productTypeIdParameter, productNameParameter);
        }
    }
}
